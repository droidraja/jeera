/*
 * Teams Public API
 *
 * Teams Public API
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicApiTeamCreationPayload {
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "displayName")]
    pub display_name: String,
    #[serde(rename = "siteId", skip_serializing_if = "Option::is_none")]
    pub site_id: Option<String>,
    #[serde(rename = "teamType")]
    pub team_type: TeamType,
}

impl PublicApiTeamCreationPayload {
    pub fn new(description: String, display_name: String, team_type: TeamType) -> PublicApiTeamCreationPayload {
        PublicApiTeamCreationPayload {
            description,
            display_name,
            site_id: None,
            team_type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TeamType {
    #[serde(rename = "OPEN")]
    Open,
    #[serde(rename = "MEMBER_INVITE")]
    MemberInvite,
    #[serde(rename = "EXTERNAL")]
    External,
}

impl Default for TeamType {
    fn default() -> TeamType {
        Self::Open
    }
}

